{"version":3,"file":"static/js/646.f791de7e.chunk.js","mappings":"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","sources":["services/userSchema.js","components/ContactsForm/ContactsForm.styled.jsx","components/ContactsForm/ContactsForm.jsx","components/ContactListItem/ContactListItem.styled.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactsBar/ContactsBar.styled.jsx","components/ContactsBar/ContactsBar.jsx","pages/Contacts.jsx"],"sourcesContent":["import { object, string } from 'yup';\n\nexport const userSchema = object({\n  name: string()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n    )\n    .required(),\n  number: string()\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n      'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +',\n    )\n    .required(),\n});\n","import { Form, Field, Formik } from 'formik';\nimport styled, { keyframes } from 'styled-components';\n\nexport const FormikWrapper = styled(Formik)``;\n\nexport const FormBox = styled(Form)`\n  display: flex;\n  gap: 20px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 20px;\n  max-width: 400px;\n  background: rgba(150, 150, 150, 0.3);\n  border-radius: 30px;\n  box-shadow: rgba(0, 0, 0, 0.45) 0px 5px 10px, rgba(0, 0, 0, 0.12) 0px -3px 5px,\n    rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 3px 5px,\n    rgba(0, 0, 0, 0.09) 0px -3px 2px;\n\n  & label {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n\n    & span {\n      margin-bottom: 5px;\n      font-size: 20px;\n      font-weight: 700;\n      color: #300101;\n      text-shadow: 0 1px 0 #cccccc, 0 2px 0 #f5eeee, 0 3px 0 #bbb,\n        0 2px 0 #f7f1f1, 0 2px 0 #ece8e8, 0 2px 1px rgba(0, 0, 0, 0.1);\n    }\n  }\n`;\n\nexport const InputName = styled(Field)`\n  padding: 0 20px;\n  margin-bottom: 10px;\n  background: rgba(150, 150, 150, 0.3);\n  line-height: 40px;\n  border-width: 0;\n  border-radius: 20px;\n  color: white;\n  font-family: 'Roboto', sans-serif;\n  font-size: 18px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n\n  &:focus {\n    outline: none;\n    border: solid 2px #560bad;\n  }\n\n  &::-webkit-input-placeholder {\n    /* WebKit browsers */\n    color: rgba(255, 255, 255, 0.5);\n  }\n  :-moz-placeholder {\n    /* Mozilla Firefox 4 to 18 */\n    color: rgba(255, 255, 255, 0.5);\n  }\n  ::-moz-placeholder {\n    /* Mozilla Firefox 19+ */\n    color: rgba(255, 255, 255, 0.5);\n  }\n`;\n\nexport const InputTel = styled(InputName)``;\n\nconst clickEffect = keyframes`\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(0.9);\n  }\n  100% {\n    transform: scale(1);\n  }\n`;\n\nexport const Button = styled.button`\n  color: #373af8;\n  padding: 5px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: 200px;\n  height: 40px;\n  font-weight: 700;\n  font-size: 17px;\n  text-shadow: 1px 1px #000;\n  line-height: normal;\n  margin: 20px;\n  border: 2px solid pink;\n  border-radius: 6px;\n  cursor: pointer;\n  box-shadow: rgba(0, 0, 0, 0.45) 0px 5px 10px, rgba(0, 0, 0, 0.12) 0px -3px 5px,\n    rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 3px 5px,\n    rgba(0, 0, 0, 0.09) 0px -3px 2px;\n  background: radial-gradient(circle, #f1c1bc, #a702a7);\n  background-clip: padding-box;\n  transition: background-image 0.3s, color 0.3s, transform 0.3s;\n\n  &:hover {\n    background: radial-gradient(circle, #b8f3b8, #f1edaf);\n    color: #065a03;\n    transform: scale(1.1);\n  }\n\n  &:active {\n    animation: ${clickEffect} 1.2s;\n  }\n`;\n\nexport const Message = styled.p`\n  color: red;\n`;\n","import { ErrorMessage } from 'formik';\nimport PropTypes from 'prop-types';\nimport { userSchema } from '../../services/userSchema';\nimport {\n  FormBox,\n  InputName,\n  InputTel,\n  Button,\n  FormikWrapper,\n  Message,\n} from './ContactsForm.styled';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst ContactsForm = ({ onSubmit }) => {\n  function handleSubmit({ name, number }, { resetForm }) {\n    onSubmit(name, number);\n    resetForm();\n  }\n\n  return (\n    <FormikWrapper\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={userSchema}\n    >\n      <FormBox autoComplete=\"off\">\n        <label>\n          <span>Name</span>\n          <InputName\n            placeholder=\"Enter contact name..\"\n            type=\"text\"\n            name=\"name\"\n          />\n          <ErrorMessage component={Message} name=\"name\" />\n        </label>\n        <label>\n          <span>Phone</span>\n          <InputTel\n            placeholder=\"Enter contact phone..\"\n            type=\"tel\"\n            name=\"number\"\n          />\n          <ErrorMessage component={Message} name=\"number\" />\n        </label>\n        <Button type=\"submit\">Add contact</Button>\n      </FormBox>\n    </FormikWrapper>\n  );\n};\n\nContactsForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactsForm;\n","import styled, { keyframes } from 'styled-components';\nimport { ImSpinner4 } from 'react-icons/im';\n\nexport const BtnWrapper = styled.div`\n  display: flex;\n  gap: 5px;\n`;\n\nexport const UserIcon = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 43px;\n  height: 43px;\n  font-size: 30px;\n  font-weight: 700;\n  background: transparent;\n  color: #000;\n  border: solid 2px #ad0bad;\n  border-radius: 50%;\n`;\n\nconst spin = keyframes`\n0% {\n  transform: rotate(360deg);\n}\n100% {\n  transform: rotate(3turn);\n}\n`;\n\nexport const Spinner = styled(ImSpinner4)`\n  animation: ${spin} 0.85s linear infinite;\n`;\nSpinner.defaultProps = {\n  size: 35,\n};\n\nexport const ContactInfo = styled.div`\n  display: flex;\n  gap: 5px;\n  flex-direction: column;\n`;\n\nexport const ButtonChange = styled.button`\n  padding: 5px;\n  border-color: #000000;\n  border-radius: 50%;\n  transition: border-color 0.2s ease;\n  background: rgba(250, 250, 250, 0.3);\n\n  &:hover {\n    border-color: yellow;\n    background: rgba(255, 255, 255, 0.5);\n    cursor: pointer;\n  }\n  &:hover svg {\n    fill: #d30aee;\n    cursor: pointer;\n  }\n  & svg {\n    fill: #000000;\n    transition: fill 0.2s ease;\n  }\n`;\n\nexport const ButtonDelete = styled.button`\n  padding: 5px;\n  border-color: #000000;\n  border-radius: 50%;\n  transition: border-color 0.2s ease;\n  background: rgba(250, 250, 250, 0.3);\n\n  &:hover {\n    border-color: red;\n    background: rgba(255, 255, 255, 0.5);\n    cursor: pointer;\n  }\n  &:hover svg {\n    fill: red;\n    cursor: pointer;\n  }\n  & svg {\n    fill: #000000;\n    transition: fill 0.2s ease;\n  }\n`;\n\nexport const Name = styled.span`\n  color: #9dfa72;\n  font-weight: 500;\n  font-size: 20px;\n`;\n\nexport const Number = styled.span`\n  color: #f1fabc;\n  font-weight: 500;\n  font-size: 20px;\n`;\n","import { Form, Field, Formik } from 'formik';\nimport styled, { keyframes } from 'styled-components';\n\nconst fadeIn = keyframes`\n  from {\n    opacity: 0;\n  }\n\n  to {\n    opacity: 1;\n  }\n`;\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: -55px;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: rgba(0, 0, 0, 0.5);\n  z-index: 1000;\n`;\n\nexport const FormikWrapper = styled(Formik)``;\n\nexport const Title = styled.h3`\n  font-size: 25px;\n  font-weight: normal;\n  color: #dd37f3;\n  text-shadow: 1px 1px #000;\n`;\n\nexport const FormBox = styled(Form)`\n  display: flex;\n  gap: 20px;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 20px;\n  max-width: 400px;\n  box-shadow: 16px 16px 32px #c8c8c8, -16px -16px 32px #fefefe;\n  text-align: center;\n  animation: ${fadeIn} 0.5s ease;\n  background: #f7f6eb;\n  border-radius: 30px;\n\n  & label {\n    display: flex;\n    flex-direction: column;\n    width: 100%;\n\n    & span {\n      margin-bottom: 5px;\n      font-size: 20px;\n      text-shadow: 1px 1px 1px #cccccc, 0 2px 0 #c9c9c9;\n    }\n  }\n`;\n\nexport const InputName = styled(Field)`\n  padding: 0 20px;\n  background: #f3edc5;\n  line-height: 40px;\n  border-width: 0;\n  border-radius: 20px;\n  font-family: 'Roboto', sans-serif;\n  font-size: 18px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);\n  text-align: center;\n  color: #07eb40;\n\n  &:focus {\n    outline: none;\n    border: solid 2px #640aca;\n  }\n`;\n\nexport const InputTel = styled(InputName)``;\n\nconst clickEffect = keyframes`\n  0% {\n    transform: scale(1);\n  }\n  50% {\n    transform: scale(0.9);\n  }\n  100% {\n    transform: scale(1);\n  }\n`;\n\nexport const Button = styled.button`\n  color: #7c240e;\n  padding: 5px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  width: 200px;\n  height: 40px;\n  font-weight: 700;\n  font-size: 25px;\n  text-shadow: 1px 1px #000;\n  line-height: normal;\n  margin: 20px;\n  border: 2px solid pink;\n  border-radius: 6px;\n  cursor: pointer;\n  box-shadow: rgba(0, 0, 0, 0.45) 0px 5px 10px, rgba(0, 0, 0, 0.12) 0px -3px 5px,\n    rgba(0, 0, 0, 0.12) 0px 4px 6px, rgba(0, 0, 0, 0.17) 0px 3px 5px,\n    rgba(0, 0, 0, 0.09) 0px -3px 2px;\n  background: radial-gradient(circle, #f1e4e2, #eb27eb);\n  background-clip: padding-box;\n  transition: background-image 0.3s, color 0.3s, transform 0.3s;\n\n  &:hover {\n    background: radial-gradient(circle, #6fd2f0, #eee56d);\n    color: #065a03;\n    transform: scale(1.1);\n  }\n\n  &:active {\n    animation: ${clickEffect} 1.2s;\n  }\n`;\n\nexport const Message = styled.p`\n  color: red;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ErrorMessage } from 'formik';\nimport { userSchema } from '../../services/userSchema';\nimport { createPortal } from 'react-dom';\nimport { patchContacts } from '../../redux/contacts/operations';\nimport {\n  Button,\n  FormBox,\n  FormikWrapper,\n  InputName,\n  Message,\n  InputTel,\n  Overlay,\n  Title,\n} from './Modal.styled';\nimport { useContacts } from '../../hooks/useContacts';\nimport { errorNotification, successNotification } from '../../hooks/useToasts';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ onCloseModal, id, name, number }) => {\n  const dispatch = useDispatch();\n  const { allContacts } = useContacts();\n\n  const initialValues = {\n    name: name,\n    number: number,\n  };\n\n  useEffect(() => {\n    const handleEscDown = evt => {\n      if (evt.code === 'Escape') {\n        onCloseModal();\n      }\n    };\n\n    window.addEventListener('keydown', handleEscDown);\n\n    return () => {\n      window.removeEventListener('keydown', handleEscDown);\n    };\n  }, [onCloseModal]);\n\n  const handleBackdropClick = evt => {\n    if (evt.currentTarget === evt.target) {\n      onCloseModal();\n    }\n  };\n\n  const handleSubmit = ({ name, number }, { resetForm }) => {\n    for (const contact of allContacts) {\n      if (number === contact.number) {\n        errorNotification(\n          `A contact with this number already exists under the name ${contact.name}`\n        );\n        return;\n      }\n    }\n    dispatch(patchContacts({ name, id, number }));\n    onCloseModal();\n    successNotification('Сontact successfully changed');\n    resetForm();\n  };\n\n  return createPortal(\n    <Overlay onClick={handleBackdropClick}>\n      <FormikWrapper\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={userSchema}\n      >\n        <FormBox autoComplete=\"off\">\n          <Title>Change a contact's name or number</Title>\n          <label>\n            <span>Name</span>\n            <InputName\n              placeholder=\"Enter new contact name\"\n              type=\"text\"\n              name=\"name\"\n            />\n            <ErrorMessage component={Message} name=\"name\" />\n          </label>\n          <label>\n            <span>Phone</span>\n            <InputTel\n              placeholder=\"Enter new contact phone\"\n              type=\"tel\"\n              name=\"number\"\n            />\n            <ErrorMessage component={Message} name=\"number\" />\n          </label>\n          <Button type=\"submit\">Change</Button>\n        </FormBox>\n      </FormikWrapper>\n    </Overlay>,\n    modalRoot\n  );\n};\n\nexport default Modal;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-hot-toast';\nimport { AiOutlineDelete } from 'react-icons/ai';\nimport { BsThreeDots } from 'react-icons/bs';\nimport { deleteContact } from '../../redux/contacts/operations';\nimport {\n  ButtonChange,\n  ButtonDelete,\n  ContactInfo,\n  Name,\n  Number,\n  Spinner,\n  UserIcon,\n  BtnWrapper,\n} from './ContactListItem.styled';\nimport Modal from '../Modal/Modal';\nimport { useContacts } from '../../hooks/useContacts';\n\nconst ContactListItem = ({ id, name, number }) => {\n  const [contactId, setContactId] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n\n  const dispatch = useDispatch();\n  const { isLoading, error } = useContacts();\n\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const handleDelete = () => {\n    dispatch(deleteContact(id));\n    setContactId(id);\n\n    if (!error) {\n      toast.success(`Contact ${name} successfully deleted`);\n    }\n  };\n\n  return (\n    <>\n      <UserIcon>{name[0]}</UserIcon>\n      <ContactInfo>\n        <Name>{name}</Name>\n        <Number>{number}</Number>\n      </ContactInfo>\n\n      <BtnWrapper>\n        <ButtonChange type=\"button\" onClick={toggleModal}>\n          <BsThreeDots size={20} />\n        </ButtonChange>\n        {isLoading && contactId === id ? (\n          <Spinner size={40} />\n        ) : (\n          <ButtonDelete\n            type=\"button\"\n            onClick={handleDelete}\n            disabled={isLoading}\n          >\n            <AiOutlineDelete size={20} />\n          </ButtonDelete>\n        )}\n      </BtnWrapper>\n\n      {showModal && (\n        <Modal onCloseModal={toggleModal} id={id} name={name} number={number} />\n      )}\n    </>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactListItem;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  gap: 20px;\n\n  & b {\n    font-size: 20px;\n    color: red;\n    text-shadow: 2px 2px #000;\n  }\n`;\n\nexport const List = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(3, 45vh);\n  grid-template-rows: repeat(3, 70px);\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 10px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  justify-content: space-between;\n  padding: 10px;\n  border-radius: 50px;\n  color: #fff;\n  background: rgba(238, 95, 202, 0.3);\n  box-shadow: rgba(0, 0, 0, 0.17) 0px -23px 25px 0px inset,\n    rgba(0, 0, 0, 0.15) 0px -36px 30px 0px inset,\n    rgba(0, 0, 0, 0.1) 0px -79px 40px 0px inset, rgba(0, 0, 0, 0.06) 0px 2px 1px,\n    rgba(0, 0, 0, 0.09) 0px 4px 2px, rgba(0, 0, 0, 0.09) 0px 8px 4px,\n    rgba(0, 0, 0, 0.09) 0px 16px 8px, rgba(0, 0, 0, 0.09) 0px 32px 16px;\n`;\n","import ContactItem from '../ContactListItem/ContactListItem';\nimport { Item, List, Wrapper } from './ContactList.styled';\nimport { useContacts } from '../../hooks/useContacts';\n\nconst ContactsList = () => {\n  const { filteredContacts } = useContacts();\n\n  return (\n    <Wrapper>\n      {filteredContacts.length > 0 ? (\n        <>\n          <List>\n            {filteredContacts.map(({ id, name, number }) => (\n              <Item key={id}>\n                <ContactItem id={id} name={name} number={number} />\n              </Item>\n            ))}\n          </List>\n        </>\n      ) : (\n        <b>Contacts not found</b>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default ContactsList;\n","import styled from 'styled-components';\n\nexport const LabelFilter = styled.label`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n\n  & span {\n    margin-right: 10px;\n    padding: 5px;\n    font-size: 20px;\n    color: #f1bc49;\n    background: rgba(3, 60, 146, 0.3);\n    border-radius: 15px;\n    text-shadow: 2px 3px 2px #474747;\n  }\n`;\n\nexport const InputFilter = styled.input`\n  padding: 0 20px;\n  background: rgba(255, 250, 250, 0.4);\n  line-height: 40px;\n  border-width: 0;\n  border-radius: 20px;\n  font-family: 'Roboto', sans-serif;\n  font-size: 18px;\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 4px;\n\n  &::-webkit-input-placeholder {\n    /* WebKit browsers */\n    color: rgba(255, 255, 0, 0.5);\n  }\n  :-moz-placeholder {\n    /* Mozilla Firefox 4 to 18 */\n    color: rgba(255, 255, 0, 0.5);\n  }\n  ::-moz-placeholder {\n    /* Mozilla Firefox 19+ */\n    color: rgba(255, 255, 0, 0.5);\n  }\n\n  &:focus {\n    outline: none;\n    border: solid 2px #560bad;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { filterContacts } from '../../redux/filter/slice';\nimport { selectFilter } from '../../redux/filter/selectors';\nimport { LabelFilter, InputFilter } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  function handleInputChange(evt) {\n    dispatch(filterContacts(evt.target.value));\n  }\n\n  return (\n    <LabelFilter>\n      <span>Find contacts by name</span>\n      <InputFilter\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Search...\"\n        value={filter}\n        onChange={handleInputChange}\n      />\n    </LabelFilter>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  max-width: 1000px;\n  margin-left: auto;\n  margin-right: auto;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  gap: 20px;\n  padding: 20px;\n  text-align: center;\n  height: 100vh;\n\n  & h1 {\n    animation: flicker 5.3s infinite alternate;\n    color: #fff;\n  }\n  @keyframes flicker {\n    0%,\n    18%,\n    22%,\n    25%,\n    53%,\n    57% {\n      text-shadow: 0 0 4px #fff, 0 0 11px #fff, 0 0 19px #fff, 0 0 40px #0fa,\n        0 0 80px #0fa, 0 0 90px #0fa, 0 0 100px #0fa, 0 0 150px #0fa;\n    }\n    10%,\n    20%,\n    24%,\n    35%,\n    55% {\n      text-shadow: none;\n    }\n  }\n`;\n\nexport const Title = styled.h1`\n  font-size: 50px;\n`;\n\nexport const Text = styled.h2`\n  font-size: 30px;\n  color: rgba(3, 63, 42, 0.75);\n  text-shadow: 0 -1px rgba(0, 0, 0, 0.3), 0 0 5px #ffd, 0 0 8px #fff;\n`;\n\nexport const Empty = styled.p`\n  font-weight: bold;\n  @-webkit-keyframes pulsate {\n    50% {\n      color: #fff;\n      text-shadow: 0 -1px rgba(0, 0, 0, 0.3), 0 0 5px #ffd, 0 0 8px #fff;\n    }\n  }\n  @keyframes pulsate {\n    50% {\n      color: #d60bf1;\n      text-shadow: 0 -1px rgba(0, 0, 0, 0.3), 0 0 5px #ffd, 0 0 8px #fff;\n    }\n  }\n  color: rgb(245, 245, 245);\n  text-shadow: 0 -1px rgba(0, 0, 0, 0.1);\n  background: radial-gradient(#42024e, #fdfa4c);\n  border-radius: 7px;\n  -webkit-animation: pulsate 2.2s linear infinite;\n  animation: pulsate 2.2s linear infinite;\n`;\n","import { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact, fetchContacts } from '../../redux/contacts/operations';\nimport { useContacts } from '../../hooks';\nimport { useLoaders } from '../../hooks/UseLoaders/useLoaders';\nimport ContactsForm from '../ContactsForm/ContactsForm';\nimport ContactsList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\nimport { Empty, Title, Wrapper, Text } from './ContactsBar.styled';\nimport { errorNotification, successNotification } from '../../hooks/useToasts';\n\nconst ContactsBar = () => {\n  const dispatch = useDispatch();\n  const { allContacts, isLoading, error } = useContacts();\n  const { LoaderBig } = useLoaders();\n  const [isAnimationActive, setIsAnimationActive] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const notifiesAlert = (numberContact, nameContact) => {\n    return errorNotification(\n      `${numberContact} is already in contacts under the name ${nameContact}.`\n    );\n  };\n\n  const checkСontact = newNumber => {\n    return allContacts.some(contact => contact.number === newNumber);\n  };\n\n  useEffect(() => {\n    if (isAnimationActive) {\n      const timer = setTimeout(() => {\n        setIsAnimationActive(false);\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [isAnimationActive]);\n\n  const onSubmit = (name, number) => {\n    if (checkСontact(number)) {\n      return notifiesAlert(number, name);\n    }\n\n    dispatch(addContact({ name, number }));\n    successNotification(`Contact ${name} added successfully`);\n    setIsAnimationActive(true);\n    setTimeout(() => {\n      setIsAnimationActive(false);\n    }, 3000);\n  };\n\n  return (\n    <Wrapper\n      className={isAnimationActive ? 'rotate-animation' : ''}\n      isHeight={allContacts.length > 0}\n    >\n      <Title>Phonebook</Title>\n      <ContactsForm onSubmit={onSubmit} />\n\n      <Text>Your contacts</Text>\n\n      {!error && isLoading && <LoaderBig />}\n\n      {!error && !isLoading && allContacts.length === 0 ? (\n        <Empty>Contacts list is empty</Empty>\n      ) : (\n        <>\n          <Filter />\n          <ContactsList />\n        </>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default ContactsBar;\n","import { Helmet } from 'react-helmet';\nimport ContactsBar from '../components/ContactsBar/ContactsBar';\nimport { useAuth, useLoaders } from '../hooks';\n\nconst Contacts = () => {\n  const { isLoading } = useAuth();\n  const { LoaderBig } = useLoaders();\n\n  return (\n    <>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n\n      {isLoading && <LoaderBig />}\n      <ContactsBar />\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["userSchema","object","name","string","matches","required","number","FormikWrapper","styled","Formik","_templateObject","_taggedTemplateLiteral","FormBox","Form","_templateObject2","InputName","Field","_templateObject3","InputTel","_templateObject4","clickEffect","keyframes","_templateObject5","Button","_templateObject6","Message","_templateObject7","initialValues","_ref","onSubmit","_jsx","_ref2","_ref3","resetForm","validationSchema","children","_jsxs","autoComplete","placeholder","type","ErrorMessage","component","BtnWrapper","UserIcon","spin","Spinner","ImSpinner4","defaultProps","size","ContactInfo","ButtonChange","ButtonDelete","Name","_templateObject8","Number","_templateObject9","fadeIn","Overlay","Title","_templateObject10","modalRoot","document","querySelector","onCloseModal","id","dispatch","useDispatch","allContacts","useContacts","useEffect","handleEscDown","evt","code","window","addEventListener","removeEventListener","createPortal","onClick","currentTarget","target","_step","_iterator","_createForOfIteratorHelper","s","n","done","contact","value","errorNotification","concat","err","e","f","patchContacts","successNotification","_useState","useState","_useState2","_slicedToArray","contactId","setContactId","_useState3","_useState4","showModal","setShowModal","_useContacts","isLoading","error","toggleModal","_Fragment","BsThreeDots","deleteContact","toast","disabled","AiOutlineDelete","Modal","Wrapper","List","Item","filteredContacts","length","map","ContactItem","LabelFilter","InputFilter","filter","useSelector","selectFilter","onChange","filterContacts","Text","Empty","LoaderBig","useLoaders","isAnimationActive","setIsAnimationActive","fetchContacts","timer","setTimeout","clearTimeout","className","isHeight","ContactsForm","newNumber","some","numberContact","nameContact","addContact","Filter","ContactsList","useAuth","Helmet","ContactsBar"],"sourceRoot":""}